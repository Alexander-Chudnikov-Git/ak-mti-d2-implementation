set(CURRENT_LIBRARY_NAME utils)

set(CURRENT_SRC_DIR "${PROJECT_MAIN_SRC_DIR}/${CURRENT_LIBRARY_NAME}")
list_all_subdirectories("${CURRENT_SRC_DIR}" CURRENT_INCLUDE_DIRS)

file(GLOB_RECURSE CURRENT_SRC_FILES CONFIGURE_DEPENDS
    "${CURRENT_SRC_DIR}/*/*.hpp"
    "${CURRENT_SRC_DIR}/*/*.cpp"
)

source_group("Utils" FILES ${CURRENT_SRC_FILES})

add_library(${CURRENT_LIBRARY_NAME} STATIC ${CURRENT_SRC_FILES})

list(APPEND PROJECT_INCLUDE_DIRS ${CURRENT_INCLUDE_DIRS})

target_include_directories(${CURRENT_LIBRARY_NAME} PUBLIC ${PROJECT_INCLUDE_DIRS})
target_link_directories(${CURRENT_LIBRARY_NAME}    PUBLIC ${PROJECT_INCLUDE_DIRS})
target_link_libraries(${CURRENT_LIBRARY_NAME}      PUBLIC ${PROJECT_LIBRARIES_LIST})

# [SOME BUILD INFO]
string(TIMESTAMP COMPILE_TIME "%Y-%m-%d %H:%M:%S")

target_compile_definitions(${CURRENT_LIBRARY_NAME} PUBLIC
                            PROJECT_NAME="${PROJECT_NAME}")
target_compile_definitions(${CURRENT_LIBRARY_NAME} PRIVATE
                            PROJECT_VERSION="${PROJECT_VERSION}"
                            COMPILE_TIME="${COMPILE_TIME}"
                            COMPILER_ID="${CMAKE_CXX_COMPILER_ID}"
                            COMPILER_VERSION="${CMAKE_CXX_COMPILER_VERSION}")

list(APPEND PROJECT_INCLUDE_DIRS ${CURRENT_SRC_DIR})
list(APPEND PROJECT_LIBRARIES_LIST ${CURRENT_LIBRARY_NAME})
